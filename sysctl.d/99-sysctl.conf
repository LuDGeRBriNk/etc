############### Hardening of the network layer

## Disable ping responses:
net.ipv4.icmp_echo_ignore_all = 1
net.ipv6.icmp.echo_ignore_all = 1

## To disable ICMP redirect acceptance:
#net.ipv4.conf.all.accept_redirects = 0
#net.ipv4.conf.default.accept_redirects = 0
#net.ipv4.conf.all.secure_redirects = 0
#net.ipv4.conf.default.secure_redirects = 0
#net.ipv6.conf.all.accept_redirects = 0
#net.ipv6.conf.default.accept_redirects = 0

## Uncomment the next two lines to enable Spoof protection (reverse-path filter):
#net.ipv4.conf.default.rp_filter = 1
#net.ipv4.conf.all.rp_filter = 1

## Uncomment the next lines to enable TCP/IP SYN cookies:
## It may impact IPv6 TCP sessions as well
#net.ipv4.tcp_syncookies = 1
#net.ipv4.tcp_max_syn_backlog = 8192
#net.ipv4.tcp_synack_retries = 2
#net.ipv4.tcp_syn_retries = 5

## tcp_max_tw_buckets is the maximum number of sockets in TIME_WAIT state.After reaching this number the system will start destroying the socket that are in this state. Increase this to prevent simple DOS attacks: 
#net.ipv4.tcp_max_tw_buckets = 2000000
#net.ipv4.tcp_tw_reuse = 1
#net.ipv4.tcp_fin_timeout = 10
#net.ipv4.tcp_slow_start_after_idle = 0

## Disable source packet routing (we are not a router):
#net.ipv4.conf.all.accept_source_route = 0
#net.ipv6.conf.all.accept_source_route = 0
#net.ipv4.conf.default.accept_source_route = 0
#net.ipv6.conf.default.accept_source_route = 0

##To disable ICMP redirect sending when on a non router:
#net.ipv4.conf.all.send_redirects = 0
#net.ipv4.conf.default.send_redirects = 0

## Often martian and unroutable packet may be used for a dangerous purpose. Logging these packets for further inspection may be useful. Note: This can fill up your logs with a lot of information, it is advisable to only enable this for testing.
#net.ipv4.conf.default.log_martians = 1
#net.ipv4.conf.all.log_martians = 1



############### Optimizing the network layer (for webservers)

## Increase number of usable ports:
#net.ipv4.ip_local_port_range = 1024 65535

## Increase the size of file handles and inode cache and restrict core dumps:
#fs.file-max = 2097152
#fs.suid_dumpable = 0

## Change the number of incoming connections and incoming connections backlog:
#net.core.somaxconn = 65535
#net.core.netdev_max_backlog = 262144

## Increase the maximum amount of memory buffers:
#net.core.optmem_max = 25165824

## Increase the default and maximum send/receive buffers:
#net.core.rmem_default = 1048576
#net.core.rmem_max = 16777216
#net.core.wmem_default = 1048576
#net.core.wmem_max = 16777216
#net.core.optmem_max = 65536
#net.ipv4.tcp_rmem = 4096 1048576 2097152
#net.ipv4.tcp_wmem = 4096 65536 16777216
#net.ipv4.udp_rmem_min = 8192
#net.ipv4.udp_wmem_min = 8192

## TCP Fast Open is an extension to the transmission control protocol (TCP) that helps reduce network latency by enabling data to be exchanged during the senderâ€™s initial TCP SYN. Using the value 3 instead of the default 1 allows TCP Fast Open for both incoming and outgoing connections:
#net.ipv4.tcp_fastopen = 3

## With the following settings, your application will detect dead TCP connections after 120 seconds (60s + 10s + 10s + 10s + 10s + 10s + 10s)
#tcp_keepalive_time = 60
#net.ipv4.tcp_keepalive_intvl = 10
#net.ipv4.tcp_keepalive_probes = 6

## Swappiness:
#vm.swappiness = 1
#vm.vfs_cache_pressure = 50
